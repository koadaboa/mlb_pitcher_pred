2025-03-28 11:44:05,627 - __main__ - INFO - Loading data...
2025-03-28 11:44:05,628 - src.data.db - INFO - Retrieving pitcher data from database...
2025-03-28 11:44:09,140 - src.data.db - INFO - Retrieved 104453 rows of pitcher data with 53 columns
2025-03-28 11:44:09,140 - src.data.db - INFO - Retrieved 20 enhanced feature columns: last_3_games_strikeouts_std, last_5_games_strikeouts_std, last_3_games_velo_std, last_5_games_velo_std, last_3_games_swinging_strike_pct_std...
2025-03-28 11:44:09,141 - __main__ - INFO - Selecting features...
2025-03-28 11:44:09,141 - src.features.selection - INFO - Available columns: ['game_db_id', 'pitcher_id', 'player_name', 'statcast_id', 'game_id', 'game_date', 'season', 'strikeouts', 'hits', 'walks', 'home_runs', 'release_speed_mean', 'release_speed_max', 'release_spin_rate_mean', 'swinging_strike_pct', 'called_strike_pct', 'zone_rate', 'last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'team_changed', 'opponent_team', 'opponent_batting_avg', 'opponent_strikeout_rate', 'opponent_ops', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy']
2025-03-28 11:44:09,141 - src.features.selection - INFO - Selected 31 features for strikeout model: ['last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg']
2025-03-28 11:44:09,151 - __main__ - INFO - Using 63310 rows from years [2019, 2021, 2022] for optimization
2025-03-28 11:44:09,836 - __main__ - INFO - Starting rf optimization with 100 trials...
2025-03-28 11:44:09,836 - __main__ - INFO - Optimizing for within_2_strikeouts (maximize)
2025-03-28 11:44:09,999 - __main__ - ERROR - Error optimizing rf: positional indexers are out-of-bounds
2025-03-28 11:44:10,000 - __main__ - ERROR - Traceback (most recent call last):
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1714, in _get_list_axis
    return self.obj._take_with_is_copy(key, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\generic.py", line 4153, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\generic.py", line 4133, in take
    new_data = self._mgr.take(
               ^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\internals\managers.py", line 891, in take
    indexer = maybe_convert_indices(indexer, n, verify=verify)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexers\utils.py", line 282, in maybe_convert_indices
    raise IndexError("indices are out-of-bounds")
IndexError: indices are out-of-bounds

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 465, in main
    study, best_model, output_dir = optimize_model(
                                    ^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 424, in optimize_model
    study.optimize(objective, n_trials=n_trials)
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\study.py", line 475, in optimize
    _optimize(
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 63, in _optimize
    _optimize_sequential(
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 248, in _run_trial
    raise func_err
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 197, in _run_trial
    value_or_values = func(trial)
                      ^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 411, in <lambda>
    objective = lambda trial: rf_objective(trial, X, y, cv_splits, primary_metric)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 143, in rf_objective
    score, betting_metrics = custom_cv_score(model, X, y, cv_splits, scorer=primary_metric)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 90, in custom_cv_score
    X_train, X_val = X.iloc[train_idx], X.iloc[val_idx]
                     ~~~~~~^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1191, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1743, in _getitem_axis
    return self._get_list_axis(key, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1717, in _get_list_axis
    raise IndexError("positional indexers are out-of-bounds") from err
IndexError: positional indexers are out-of-bounds

2025-03-28 11:44:10,000 - __main__ - INFO - Loading data...
2025-03-28 11:44:10,000 - src.data.db - INFO - Retrieving pitcher data from database...
2025-03-28 11:44:13,564 - src.data.db - INFO - Retrieved 104453 rows of pitcher data with 53 columns
2025-03-28 11:44:13,565 - src.data.db - INFO - Retrieved 20 enhanced feature columns: last_3_games_strikeouts_std, last_5_games_strikeouts_std, last_3_games_velo_std, last_5_games_velo_std, last_3_games_swinging_strike_pct_std...
2025-03-28 11:44:13,565 - __main__ - INFO - Selecting features...
2025-03-28 11:44:13,565 - src.features.selection - INFO - Available columns: ['game_db_id', 'pitcher_id', 'player_name', 'statcast_id', 'game_id', 'game_date', 'season', 'strikeouts', 'hits', 'walks', 'home_runs', 'release_speed_mean', 'release_speed_max', 'release_spin_rate_mean', 'swinging_strike_pct', 'called_strike_pct', 'zone_rate', 'last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'team_changed', 'opponent_team', 'opponent_batting_avg', 'opponent_strikeout_rate', 'opponent_ops', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy']
2025-03-28 11:44:13,565 - src.features.selection - INFO - Selected 31 features for strikeout model: ['last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg']
2025-03-28 11:44:13,576 - __main__ - INFO - Using 63310 rows from years [2019, 2021, 2022] for optimization
2025-03-28 11:44:13,742 - __main__ - INFO - Starting xgboost optimization with 100 trials...
2025-03-28 11:44:13,742 - __main__ - INFO - Optimizing for within_2_strikeouts (maximize)
2025-03-28 11:44:13,821 - __main__ - ERROR - Error optimizing xgboost: positional indexers are out-of-bounds
2025-03-28 11:44:13,821 - __main__ - ERROR - Traceback (most recent call last):
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1714, in _get_list_axis
    return self.obj._take_with_is_copy(key, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\generic.py", line 4153, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\generic.py", line 4133, in take
    new_data = self._mgr.take(
               ^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\internals\managers.py", line 891, in take
    indexer = maybe_convert_indices(indexer, n, verify=verify)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexers\utils.py", line 282, in maybe_convert_indices
    raise IndexError("indices are out-of-bounds")
IndexError: indices are out-of-bounds

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 465, in main
    study, best_model, output_dir = optimize_model(
                                    ^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 424, in optimize_model
    study.optimize(objective, n_trials=n_trials)
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\study.py", line 475, in optimize
    _optimize(
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 63, in _optimize
    _optimize_sequential(
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 248, in _run_trial
    raise func_err
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 197, in _run_trial
    value_or_values = func(trial)
                      ^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 413, in <lambda>
    objective = lambda trial: xgb_objective(trial, X, y, cv_splits, primary_metric)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 178, in xgb_objective
    score, betting_metrics = custom_cv_score(model, X, y, cv_splits, scorer=primary_metric)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 90, in custom_cv_score
    X_train, X_val = X.iloc[train_idx], X.iloc[val_idx]
                     ~~~~~~^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1191, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1743, in _getitem_axis
    return self._get_list_axis(key, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1717, in _get_list_axis
    raise IndexError("positional indexers are out-of-bounds") from err
IndexError: positional indexers are out-of-bounds

2025-03-28 11:44:13,822 - __main__ - INFO - Loading data...
2025-03-28 11:44:13,822 - src.data.db - INFO - Retrieving pitcher data from database...
2025-03-28 11:44:17,304 - src.data.db - INFO - Retrieved 104453 rows of pitcher data with 53 columns
2025-03-28 11:44:17,304 - src.data.db - INFO - Retrieved 20 enhanced feature columns: last_3_games_strikeouts_std, last_5_games_strikeouts_std, last_3_games_velo_std, last_5_games_velo_std, last_3_games_swinging_strike_pct_std...
2025-03-28 11:44:17,304 - __main__ - INFO - Selecting features...
2025-03-28 11:44:17,304 - src.features.selection - INFO - Available columns: ['game_db_id', 'pitcher_id', 'player_name', 'statcast_id', 'game_id', 'game_date', 'season', 'strikeouts', 'hits', 'walks', 'home_runs', 'release_speed_mean', 'release_speed_max', 'release_spin_rate_mean', 'swinging_strike_pct', 'called_strike_pct', 'zone_rate', 'last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'team_changed', 'opponent_team', 'opponent_batting_avg', 'opponent_strikeout_rate', 'opponent_ops', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy']
2025-03-28 11:44:17,304 - src.features.selection - INFO - Selected 31 features for strikeout model: ['last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg']
2025-03-28 11:44:17,315 - __main__ - INFO - Using 63310 rows from years [2019, 2021, 2022] for optimization
2025-03-28 11:44:17,483 - __main__ - INFO - Starting lightgbm optimization with 100 trials...
2025-03-28 11:44:17,483 - __main__ - INFO - Optimizing for within_2_strikeouts (maximize)
2025-03-28 11:44:17,568 - __main__ - ERROR - Error optimizing lightgbm: positional indexers are out-of-bounds
2025-03-28 11:44:17,569 - __main__ - ERROR - Traceback (most recent call last):
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1714, in _get_list_axis
    return self.obj._take_with_is_copy(key, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\generic.py", line 4153, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\generic.py", line 4133, in take
    new_data = self._mgr.take(
               ^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\internals\managers.py", line 891, in take
    indexer = maybe_convert_indices(indexer, n, verify=verify)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexers\utils.py", line 282, in maybe_convert_indices
    raise IndexError("indices are out-of-bounds")
IndexError: indices are out-of-bounds

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 465, in main
    study, best_model, output_dir = optimize_model(
                                    ^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 424, in optimize_model
    study.optimize(objective, n_trials=n_trials)
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\study.py", line 475, in optimize
    _optimize(
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 63, in _optimize
    _optimize_sequential(
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 248, in _run_trial
    raise func_err
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\optuna\study\_optimize.py", line 197, in _run_trial
    value_or_values = func(trial)
                      ^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 415, in <lambda>
    objective = lambda trial: lgb_objective(trial, X, y, cv_splits, primary_metric)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 215, in lgb_objective
    score, betting_metrics = custom_cv_score(model, X, y, cv_splits, scorer=primary_metric)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\src\scripts\optimize_models.py", line 90, in custom_cv_score
    X_train, X_val = X.iloc[train_idx], X.iloc[val_idx]
                     ~~~~~~^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1191, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1743, in _getitem_axis
    return self._get_list_axis(key, axis=axis)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\users\kekoa\documents\datascience\mlb_pred\venv\Lib\site-packages\pandas\core\indexing.py", line 1717, in _get_list_axis
    raise IndexError("positional indexers are out-of-bounds") from err
IndexError: positional indexers are out-of-bounds

2025-03-28 11:49:09,843 - __main__ - INFO - Loading data...
2025-03-28 11:49:09,843 - src.data.db - INFO - Retrieving pitcher data from database...
2025-03-28 11:49:13,072 - src.data.db - INFO - Retrieved 104453 rows of pitcher data with 53 columns
2025-03-28 11:49:13,072 - src.data.db - INFO - Retrieved 20 enhanced feature columns: last_3_games_strikeouts_std, last_5_games_strikeouts_std, last_3_games_velo_std, last_5_games_velo_std, last_3_games_swinging_strike_pct_std...
2025-03-28 11:49:13,072 - __main__ - INFO - Selecting features...
2025-03-28 11:49:13,072 - src.features.selection - INFO - Available columns: ['game_db_id', 'pitcher_id', 'player_name', 'statcast_id', 'game_id', 'game_date', 'season', 'strikeouts', 'hits', 'walks', 'home_runs', 'release_speed_mean', 'release_speed_max', 'release_spin_rate_mean', 'swinging_strike_pct', 'called_strike_pct', 'zone_rate', 'last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'team_changed', 'opponent_team', 'opponent_batting_avg', 'opponent_strikeout_rate', 'opponent_ops', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy']
2025-03-28 11:49:13,072 - src.features.selection - INFO - Selected 31 features for strikeout model: ['last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg']
2025-03-28 11:49:13,082 - __main__ - INFO - Using 63310 rows from years [2019, 2021, 2022] for optimization
2025-03-28 11:49:13,537 - __main__ - INFO - Starting rf optimization with 20 trials...
2025-03-28 11:49:13,537 - __main__ - INFO - Optimizing for within_2_strikeouts (maximize)
2025-03-28 11:51:58,476 - __main__ - INFO - Trial 0: within_2_strikeouts=87.4506, Within 2 K: 87.45%, Over/Under: 73.67%, Params: {'n_estimators': 164, 'max_depth': 29, 'min_samples_split': 3, 'min_samples_leaf': 2, 'max_features': 'log2', 'bootstrap': False, 'random_state': 42}
2025-03-28 11:54:50,732 - __main__ - INFO - Trial 1: within_2_strikeouts=88.0935, Within 2 K: 88.09%, Over/Under: 73.63%, Params: {'n_estimators': 382, 'max_depth': 7, 'min_samples_split': 8, 'min_samples_leaf': 3, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 11:55:54,382 - __main__ - INFO - Trial 2: within_2_strikeouts=87.6970, Within 2 K: 87.70%, Over/Under: 73.73%, Params: {'n_estimators': 120, 'max_depth': 15, 'min_samples_split': 12, 'min_samples_leaf': 8, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}
2025-03-28 12:00:13,735 - __main__ - INFO - Trial 3: within_2_strikeouts=87.2832, Within 2 K: 87.28%, Over/Under: 73.63%, Params: {'n_estimators': 75, 'max_depth': 17, 'min_samples_split': 9, 'min_samples_leaf': 2, 'max_features': None, 'bootstrap': True, 'random_state': 42}
2025-03-28 12:03:53,915 - __main__ - INFO - Trial 4: within_2_strikeouts=87.6244, Within 2 K: 87.62%, Over/Under: 73.69%, Params: {'n_estimators': 384, 'max_depth': 25, 'min_samples_split': 10, 'min_samples_leaf': 3, 'max_features': 'log2', 'bootstrap': True, 'random_state': 42}
2025-03-28 12:05:59,188 - __main__ - INFO - Trial 5: within_2_strikeouts=87.4333, Within 2 K: 87.43%, Over/Under: 73.70%, Params: {'n_estimators': 116, 'max_depth': 25, 'min_samples_split': 19, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 12:08:08,415 - __main__ - INFO - Trial 6: within_2_strikeouts=87.5770, Within 2 K: 87.58%, Over/Under: 73.69%, Params: {'n_estimators': 145, 'max_depth': 17, 'min_samples_split': 10, 'min_samples_leaf': 7, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 12:13:56,118 - __main__ - INFO - Trial 7: within_2_strikeouts=87.6228, Within 2 K: 87.62%, Over/Under: 73.69%, Params: {'n_estimators': 486, 'max_depth': 24, 'min_samples_split': 8, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}
2025-03-28 12:17:01,705 - __main__ - INFO - Trial 8: within_2_strikeouts=87.6086, Within 2 K: 87.61%, Over/Under: 73.71%, Params: {'n_estimators': 323, 'max_depth': 30, 'min_samples_split': 20, 'min_samples_leaf': 2, 'max_features': 'log2', 'bootstrap': True, 'random_state': 42}
2025-03-28 12:24:17,951 - __main__ - INFO - Trial 9: within_2_strikeouts=87.5786, Within 2 K: 87.58%, Over/Under: 73.70%, Params: {'n_estimators': 467, 'max_depth': 19, 'min_samples_split': 17, 'min_samples_leaf': 9, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 12:32:01,173 - __main__ - INFO - Trial 10: within_2_strikeouts=87.2500, Within 2 K: 87.25%, Over/Under: 73.54%, Params: {'n_estimators': 237, 'max_depth': 5, 'min_samples_split': 3, 'min_samples_leaf': 5, 'max_features': None, 'bootstrap': False, 'random_state': 42}
2025-03-28 12:33:17,193 - __main__ - INFO - Trial 11: within_2_strikeouts=88.0588, Within 2 K: 88.06%, Over/Under: 73.62%, Params: {'n_estimators': 257, 'max_depth': 7, 'min_samples_split': 13, 'min_samples_leaf': 10, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}
2025-03-28 12:35:00,496 - __main__ - INFO - Trial 12: within_2_strikeouts=88.1756, Within 2 K: 88.18%, Over/Under: 73.56%, Params: {'n_estimators': 267, 'max_depth': 6, 'min_samples_split': 13, 'min_samples_leaf': 5, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 12:38:43,462 - __main__ - INFO - Trial 13: within_2_strikeouts=87.8913, Within 2 K: 87.89%, Over/Under: 73.69%, Params: {'n_estimators': 367, 'max_depth': 10, 'min_samples_split': 15, 'min_samples_leaf': 5, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 13:04:21,061 - __main__ - INFO - Trial 14: within_2_strikeouts=85.9138, Within 2 K: 85.91%, Over/Under: 72.94%, Params: {'n_estimators': 397, 'max_depth': 11, 'min_samples_split': 6, 'min_samples_leaf': 4, 'max_features': None, 'bootstrap': False, 'random_state': 42}
2025-03-28 13:06:33,820 - __main__ - INFO - Trial 15: within_2_strikeouts=87.8124, Within 2 K: 87.81%, Over/Under: 73.69%, Params: {'n_estimators': 203, 'max_depth': 11, 'min_samples_split': 6, 'min_samples_leaf': 6, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 13:09:13,924 - __main__ - INFO - Trial 16: within_2_strikeouts=87.9893, Within 2 K: 87.99%, Over/Under: 73.62%, Params: {'n_estimators': 322, 'max_depth': 8, 'min_samples_split': 14, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 13:10:51,373 - __main__ - INFO - Trial 17: within_2_strikeouts=88.2862, Within 2 K: 88.29%, Over/Under: 73.44%, Params: {'n_estimators': 302, 'max_depth': 5, 'min_samples_split': 7, 'min_samples_leaf': 6, 'max_features': 'sqrt', 'bootstrap': False, 'random_state': 42}
2025-03-28 13:34:34,004 - __main__ - INFO - Trial 18: within_2_strikeouts=84.8476, Within 2 K: 84.85%, Over/Under: 72.19%, Params: {'n_estimators': 309, 'max_depth': 14, 'min_samples_split': 16, 'min_samples_leaf': 7, 'max_features': None, 'bootstrap': False, 'random_state': 42}
2025-03-28 13:35:27,907 - __main__ - INFO - Trial 19: within_2_strikeouts=88.3004, Within 2 K: 88.30%, Over/Under: 73.47%, Params: {'n_estimators': 202, 'max_depth': 5, 'min_samples_split': 6, 'min_samples_leaf': 6, 'max_features': 'log2', 'bootstrap': False, 'random_state': 42}
2025-03-28 13:35:27,947 - __main__ - INFO - Optimization completed in 106.24 minutes
2025-03-28 13:35:27,950 - __main__ - INFO - Best value: 88.30042647291108
2025-03-28 13:35:27,953 - __main__ - INFO - Best params: {'n_estimators': 202, 'max_depth': 5, 'min_samples_split': 6, 'min_samples_leaf': 6, 'max_features': 'log2', 'bootstrap': False}
2025-03-28 13:35:42,906 - __main__ - INFO - Best rf model saved to models\optimization\rf_20250328_114909\optimized_rf_model.pkl
2025-03-28 13:35:42,906 - __main__ - INFO - Optimization for rf completed. Results saved to models\optimization\rf_20250328_114909
2025-03-28 13:38:40,753 - __main__ - INFO - Loading data...
2025-03-28 13:38:40,753 - src.data.db - INFO - Retrieving pitcher data from database...
2025-03-28 13:38:44,058 - src.data.db - INFO - Retrieved 104453 rows of pitcher data with 53 columns
2025-03-28 13:38:44,059 - src.data.db - INFO - Retrieved 20 enhanced feature columns: last_3_games_strikeouts_std, last_5_games_strikeouts_std, last_3_games_velo_std, last_5_games_velo_std, last_3_games_swinging_strike_pct_std...
2025-03-28 13:38:44,059 - __main__ - INFO - Selecting features...
2025-03-28 13:38:44,059 - src.features.selection - INFO - Available columns: ['game_db_id', 'pitcher_id', 'player_name', 'statcast_id', 'game_id', 'game_date', 'season', 'strikeouts', 'hits', 'walks', 'home_runs', 'release_speed_mean', 'release_speed_max', 'release_spin_rate_mean', 'swinging_strike_pct', 'called_strike_pct', 'zone_rate', 'last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'team_changed', 'opponent_team', 'opponent_batting_avg', 'opponent_strikeout_rate', 'opponent_ops', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy']
2025-03-28 13:38:44,059 - src.features.selection - INFO - Selected 31 features for strikeout model: ['last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg']
2025-03-28 13:38:44,070 - __main__ - INFO - Using 63310 rows from years [2019, 2021, 2022] for optimization
2025-03-28 13:38:44,532 - __main__ - INFO - Starting xgboost optimization with 20 trials...
2025-03-28 13:38:44,533 - __main__ - INFO - Optimizing for within_2_strikeouts (maximize)
2025-03-28 13:38:49,613 - __main__ - INFO - Trial 0: within_2_strikeouts=87.1031, Within 2 K: 87.10%, Over/Under: 73.67%, Params: {'n_estimators': 473, 'max_depth': 7, 'learning_rate': 0.08050835820115695, 'subsample': 0.6805239436971511, 'colsample_bytree': 0.9372314276809526, 'min_child_weight': 8, 'gamma': 2.6320386760659424, 'reg_alpha': 4.329424032226016, 'reg_lambda': 2.189869008865131, 'random_state': 42}
2025-03-28 13:38:52,671 - __main__ - INFO - Trial 1: within_2_strikeouts=85.7827, Within 2 K: 85.78%, Over/Under: 73.01%, Params: {'n_estimators': 487, 'max_depth': 10, 'learning_rate': 0.2919489425988284, 'subsample': 0.6912520653862236, 'colsample_bytree': 0.9630123523948622, 'min_child_weight': 9, 'gamma': 4.437249074025377, 'reg_alpha': 1.8641843270726055, 'reg_lambda': 1.1714767027299051, 'random_state': 42}
2025-03-28 13:38:56,849 - __main__ - INFO - Trial 2: within_2_strikeouts=86.3418, Within 2 K: 86.34%, Over/Under: 73.36%, Params: {'n_estimators': 197, 'max_depth': 9, 'learning_rate': 0.17490495217434907, 'subsample': 0.8281987164378164, 'colsample_bytree': 0.7191652569331227, 'min_child_weight': 4, 'gamma': 0.8540733172403958, 'reg_alpha': 1.095289792326939, 'reg_lambda': 3.86131465290986, 'random_state': 42}
2025-03-28 13:38:57,662 - __main__ - INFO - Trial 3: within_2_strikeouts=87.5249, Within 2 K: 87.52%, Over/Under: 73.67%, Params: {'n_estimators': 120, 'max_depth': 3, 'learning_rate': 0.22287885442970712, 'subsample': 0.7099343162599561, 'colsample_bytree': 0.5633391531329296, 'min_child_weight': 7, 'gamma': 2.0748492426972343, 'reg_alpha': 0.6138257471866626, 'reg_lambda': 4.558405061592059, 'random_state': 42}
2025-03-28 13:39:01,183 - __main__ - INFO - Trial 4: within_2_strikeouts=87.4364, Within 2 K: 87.44%, Over/Under: 73.69%, Params: {'n_estimators': 101, 'max_depth': 10, 'learning_rate': 0.05837468679176376, 'subsample': 0.8413691225497528, 'colsample_bytree': 0.6790483499914561, 'min_child_weight': 2, 'gamma': 4.066562310229287, 'reg_alpha': 1.2681038671764067, 'reg_lambda': 2.6704534275372898, 'random_state': 42}
2025-03-28 13:39:02,883 - __main__ - INFO - Trial 5: within_2_strikeouts=87.8503, Within 2 K: 87.85%, Over/Under: 73.74%, Params: {'n_estimators': 283, 'max_depth': 4, 'learning_rate': 0.023001421309256573, 'subsample': 0.8388645535973633, 'colsample_bytree': 0.9687341695018674, 'min_child_weight': 9, 'gamma': 0.6617482880370695, 'reg_alpha': 2.5435323922935793, 'reg_lambda': 3.8169689223356986, 'random_state': 42}
2025-03-28 13:39:09,317 - __main__ - INFO - Trial 6: within_2_strikeouts=86.0733, Within 2 K: 86.07%, Over/Under: 73.30%, Params: {'n_estimators': 437, 'max_depth': 9, 'learning_rate': 0.13991751766693455, 'subsample': 0.5289086096159019, 'colsample_bytree': 0.8637907806264229, 'min_child_weight': 8, 'gamma': 1.8977357538939592, 'reg_alpha': 4.845947460392109, 'reg_lambda': 2.162874677117397, 'random_state': 42}
2025-03-28 13:39:14,107 - __main__ - INFO - Trial 7: within_2_strikeouts=88.2562, Within 2 K: 88.26%, Over/Under: 73.73%, Params: {'n_estimators': 158, 'max_depth': 9, 'learning_rate': 0.016566267483188978, 'subsample': 0.7150451866949961, 'colsample_bytree': 0.7095693598062851, 'min_child_weight': 3, 'gamma': 1.2664290175487036, 'reg_alpha': 1.9195938690028331, 'reg_lambda': 0.8875610737445694, 'random_state': 42}
2025-03-28 13:39:17,752 - __main__ - INFO - Trial 8: within_2_strikeouts=87.2485, Within 2 K: 87.25%, Over/Under: 73.73%, Params: {'n_estimators': 427, 'max_depth': 6, 'learning_rate': 0.06468341349096052, 'subsample': 0.5814148545173266, 'colsample_bytree': 0.9486420593225406, 'min_child_weight': 5, 'gamma': 0.9727138251514378, 'reg_alpha': 3.52560498174326, 'reg_lambda': 1.9393564102773704, 'random_state': 42}
2025-03-28 13:39:23,711 - __main__ - INFO - Trial 9: within_2_strikeouts=88.2483, Within 2 K: 88.25%, Over/Under: 73.76%, Params: {'n_estimators': 78, 'max_depth': 12, 'learning_rate': 0.031648408227037156, 'subsample': 0.7072488189718205, 'colsample_bytree': 0.7383256395480425, 'min_child_weight': 1, 'gamma': 4.5499722705181025, 'reg_alpha': 0.21850398725640985, 'reg_lambda': 4.085692285153914, 'random_state': 42}
2025-03-28 13:39:42,480 - __main__ - INFO - Trial 10: within_2_strikeouts=88.0777, Within 2 K: 88.08%, Over/Under: 73.71%, Params: {'n_estimators': 297, 'max_depth': 12, 'learning_rate': 0.010161091025775434, 'subsample': 0.9600891217115495, 'colsample_bytree': 0.5311070502631731, 'min_child_weight': 3, 'gamma': 3.2402972416459166, 'reg_alpha': 2.8501716306635947, 'reg_lambda': 0.04161603934022473, 'random_state': 42}
2025-03-28 13:39:48,286 - __main__ - INFO - Trial 11: within_2_strikeouts=88.5658, Within 2 K: 88.57%, Over/Under: 73.70%, Params: {'n_estimators': 62, 'max_depth': 12, 'learning_rate': 0.02236916786126005, 'subsample': 0.6201400742784468, 'colsample_bytree': 0.8018393382535705, 'min_child_weight': 1, 'gamma': 4.833738115085778, 'reg_alpha': 0.11959374159112825, 'reg_lambda': 0.09926296534235313, 'random_state': 42}
2025-03-28 13:39:59,620 - __main__ - INFO - Trial 12: within_2_strikeouts=88.1425, Within 2 K: 88.14%, Over/Under: 73.79%, Params: {'n_estimators': 192, 'max_depth': 11, 'learning_rate': 0.014047874607789028, 'subsample': 0.5880380938863425, 'colsample_bytree': 0.8382124935378003, 'min_child_weight': 1, 'gamma': 3.3981842255388397, 'reg_alpha': 1.6414055125459917, 'reg_lambda': 0.08450725762745692, 'random_state': 42}
2025-03-28 13:40:02,311 - __main__ - INFO - Trial 13: within_2_strikeouts=87.7555, Within 2 K: 87.76%, Over/Under: 73.78%, Params: {'n_estimators': 164, 'max_depth': 8, 'learning_rate': 0.027552833837277, 'subsample': 0.5987873165694235, 'colsample_bytree': 0.6326354719343857, 'min_child_weight': 3, 'gamma': 0.03596656085249128, 'reg_alpha': 0.33854510783353686, 'reg_lambda': 0.9235727937638982, 'random_state': 42}
2025-03-28 13:40:03,109 - __main__ - INFO - Trial 14: within_2_strikeouts=88.2451, Within 2 K: 88.25%, Over/Under: 73.72%, Params: {'n_estimators': 55, 'max_depth': 6, 'learning_rate': 0.018054669675144398, 'subsample': 0.7716564871074658, 'colsample_bytree': 0.8103193937291783, 'min_child_weight': 5, 'gamma': 1.6276246327747437, 'reg_alpha': 3.4765634355938446, 'reg_lambda': 0.8404231923585828, 'random_state': 42}
2025-03-28 13:40:08,923 - __main__ - INFO - Trial 15: within_2_strikeouts=87.3669, Within 2 K: 87.37%, Over/Under: 73.71%, Params: {'n_estimators': 223, 'max_depth': 11, 'learning_rate': 0.041650414545773624, 'subsample': 0.6408445063724942, 'colsample_bytree': 0.7853363154841911, 'min_child_weight': 3, 'gamma': 4.939492186756505, 'reg_alpha': 1.9442554646461536, 'reg_lambda': 1.4299403780318887, 'random_state': 42}
2025-03-28 13:40:11,416 - __main__ - INFO - Trial 16: within_2_strikeouts=88.6353, Within 2 K: 88.64%, Over/Under: 73.75%, Params: {'n_estimators': 139, 'max_depth': 8, 'learning_rate': 0.013635160340953014, 'subsample': 0.5101882320818564, 'colsample_bytree': 0.6368651518918804, 'min_child_weight': 1, 'gamma': 3.000811747460935, 'reg_alpha': 0.9151421117321448, 'reg_lambda': 0.5132801758778149, 'random_state': 42}
2025-03-28 13:40:13,772 - __main__ - INFO - Trial 17: within_2_strikeouts=88.2357, Within 2 K: 88.24%, Over/Under: 73.73%, Params: {'n_estimators': 327, 'max_depth': 5, 'learning_rate': 0.010478790404304494, 'subsample': 0.5219643725645795, 'colsample_bytree': 0.6155813897363334, 'min_child_weight': 1, 'gamma': 3.668226999464034, 'reg_alpha': 0.8757653677884764, 'reg_lambda': 0.3948868544271935, 'random_state': 42}
2025-03-28 13:40:15,545 - __main__ - INFO - Trial 18: within_2_strikeouts=87.7476, Within 2 K: 87.75%, Over/Under: 73.79%, Params: {'n_estimators': 133, 'max_depth': 7, 'learning_rate': 0.03728400812060499, 'subsample': 0.5148042823404413, 'colsample_bytree': 0.8809199269638702, 'min_child_weight': 2, 'gamma': 2.8303006969410864, 'reg_alpha': 0.07849409003210872, 'reg_lambda': 2.9614885819609054, 'random_state': 42}
2025-03-28 13:40:18,811 - __main__ - INFO - Trial 19: within_2_strikeouts=87.7334, Within 2 K: 87.73%, Over/Under: 73.79%, Params: {'n_estimators': 238, 'max_depth': 8, 'learning_rate': 0.02081541782304201, 'subsample': 0.6356941528589704, 'colsample_bytree': 0.6542894358683435, 'min_child_weight': 6, 'gamma': 4.995069263789583, 'reg_alpha': 1.318554334194505, 'reg_lambda': 1.6806021103372402, 'random_state': 42}
2025-03-28 13:40:18,839 - __main__ - INFO - Optimization completed in 1.57 minutes
2025-03-28 13:40:18,843 - __main__ - INFO - Best value: 88.63528668456799
2025-03-28 13:40:18,847 - __main__ - INFO - Best params: {'n_estimators': 139, 'max_depth': 8, 'learning_rate': 0.013635160340953014, 'subsample': 0.5101882320818564, 'colsample_bytree': 0.6368651518918804, 'min_child_weight': 1, 'gamma': 3.000811747460935, 'reg_alpha': 0.9151421117321448, 'reg_lambda': 0.5132801758778149}
2025-03-28 13:40:20,970 - __main__ - INFO - Best xgboost model saved to models\optimization\xgboost_20250328_133840\optimized_xgboost_model.pkl
2025-03-28 13:40:20,970 - __main__ - INFO - Optimization for xgboost completed. Results saved to models\optimization\xgboost_20250328_133840
2025-03-28 13:40:59,476 - __main__ - INFO - Loading data...
2025-03-28 13:40:59,477 - src.data.db - INFO - Retrieving pitcher data from database...
2025-03-28 13:41:02,768 - src.data.db - INFO - Retrieved 104453 rows of pitcher data with 53 columns
2025-03-28 13:41:02,768 - src.data.db - INFO - Retrieved 20 enhanced feature columns: last_3_games_strikeouts_std, last_5_games_strikeouts_std, last_3_games_velo_std, last_5_games_velo_std, last_3_games_swinging_strike_pct_std...
2025-03-28 13:41:02,768 - __main__ - INFO - Selecting features...
2025-03-28 13:41:02,768 - src.features.selection - INFO - Available columns: ['game_db_id', 'pitcher_id', 'player_name', 'statcast_id', 'game_id', 'game_date', 'season', 'strikeouts', 'hits', 'walks', 'home_runs', 'release_speed_mean', 'release_speed_max', 'release_spin_rate_mean', 'swinging_strike_pct', 'called_strike_pct', 'zone_rate', 'last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'team_changed', 'opponent_team', 'opponent_batting_avg', 'opponent_strikeout_rate', 'opponent_ops', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy']
2025-03-28 13:41:02,769 - src.features.selection - INFO - Selected 31 features for strikeout model: ['last_3_games_strikeouts_avg', 'last_5_games_strikeouts_avg', 'last_3_games_velo_avg', 'last_5_games_velo_avg', 'last_3_games_swinging_strike_pct_avg', 'last_5_games_swinging_strike_pct_avg', 'days_rest', 'last_3_games_strikeouts_std', 'last_5_games_strikeouts_std', 'last_3_games_velo_std', 'last_5_games_velo_std', 'last_3_games_swinging_strike_pct_std', 'last_5_games_swinging_strike_pct_std', 'trend_3_strikeouts', 'trend_5_strikeouts', 'trend_3_release_speed_mean', 'trend_5_release_speed_mean', 'trend_3_swinging_strike_pct', 'trend_5_swinging_strike_pct', 'momentum_3_strikeouts', 'momentum_5_strikeouts', 'momentum_3_release_speed_mean', 'momentum_5_release_speed_mean', 'momentum_3_swinging_strike_pct', 'momentum_5_swinging_strike_pct', 'pitch_entropy', 'prev_game_pitch_entropy', 'last_3_games_called_strike_pct_avg', 'last_5_games_called_strike_pct_avg', 'last_3_games_zone_rate_avg', 'last_5_games_zone_rate_avg']
2025-03-28 13:41:02,780 - __main__ - INFO - Using 63310 rows from years [2019, 2021, 2022] for optimization
2025-03-28 13:41:03,228 - __main__ - INFO - Starting lightgbm optimization with 20 trials...
2025-03-28 13:41:03,228 - __main__ - INFO - Optimizing for within_2_strikeouts (maximize)
2025-03-28 13:41:04,586 - __main__ - INFO - Trial 0: within_2_strikeouts=87.5960, Within 2 K: 87.60%, Over/Under: 73.79%, Params: {'n_estimators': 390, 'learning_rate': 0.2168787864457512, 'num_leaves': 52, 'max_depth': 6, 'min_data_in_leaf': 67, 'feature_fraction': 0.5374500401277222, 'bagging_fraction': 0.9607323587541267, 'bagging_freq': 3, 'min_gain_to_split': 3.6217255734803784, 'lambda_l1': 4.988716971292912, 'lambda_l2': 4.317824509585872, 'random_state': 42}
2025-03-28 13:41:05,982 - __main__ - INFO - Trial 1: within_2_strikeouts=87.3480, Within 2 K: 87.35%, Over/Under: 73.77%, Params: {'n_estimators': 401, 'learning_rate': 0.19407291436908747, 'num_leaves': 21, 'max_depth': 6, 'min_data_in_leaf': 83, 'feature_fraction': 0.947461346088663, 'bagging_fraction': 0.8078311823502871, 'bagging_freq': 5, 'min_gain_to_split': 3.1250555757904337, 'lambda_l1': 2.9009348563724613, 'lambda_l2': 3.643326114034765, 'random_state': 42}
2025-03-28 13:41:07,253 - __main__ - INFO - Trial 2: within_2_strikeouts=87.5375, Within 2 K: 87.54%, Over/Under: 73.74%, Params: {'n_estimators': 87, 'learning_rate': 0.06395957066469384, 'num_leaves': 74, 'max_depth': 10, 'min_data_in_leaf': 68, 'feature_fraction': 0.9769775106808828, 'bagging_fraction': 0.6393211415010922, 'bagging_freq': 5, 'min_gain_to_split': 2.0333318611395734, 'lambda_l1': 2.4120220807871444, 'lambda_l2': 0.7065369215443068, 'random_state': 42}
2025-03-28 13:41:08,415 - __main__ - INFO - Trial 3: within_2_strikeouts=88.6353, Within 2 K: 88.64%, Over/Under: 73.77%, Params: {'n_estimators': 51, 'learning_rate': 0.03758337169564416, 'num_leaves': 114, 'max_depth': 9, 'min_data_in_leaf': 85, 'feature_fraction': 0.8529504463152238, 'bagging_fraction': 0.7683098771932437, 'bagging_freq': 8, 'min_gain_to_split': 0.9073782127063218, 'lambda_l1': 2.199141822362428, 'lambda_l2': 1.825559100130576, 'random_state': 42}
2025-03-28 13:41:09,349 - __main__ - INFO - Trial 4: within_2_strikeouts=88.2767, Within 2 K: 88.28%, Over/Under: 73.75%, Params: {'n_estimators': 59, 'learning_rate': 0.017286191897905756, 'num_leaves': 87, 'max_depth': 7, 'min_data_in_leaf': 70, 'feature_fraction': 0.7333219991639028, 'bagging_fraction': 0.5221061499234336, 'bagging_freq': 6, 'min_gain_to_split': 4.282454250111411, 'lambda_l1': 0.1643947260710804, 'lambda_l2': 1.9625402513022698, 'random_state': 42}
2025-03-28 13:41:10,904 - __main__ - INFO - Trial 5: within_2_strikeouts=86.8346, Within 2 K: 86.83%, Over/Under: 73.51%, Params: {'n_estimators': 226, 'learning_rate': 0.273282945908665, 'num_leaves': 59, 'max_depth': 5, 'min_data_in_leaf': 80, 'feature_fraction': 0.9109239992123808, 'bagging_fraction': 0.6054022963491127, 'bagging_freq': 2, 'min_gain_to_split': 0.2922268297958902, 'lambda_l1': 0.8087138558968937, 'lambda_l2': 2.04530583084046, 'random_state': 42}
2025-03-28 13:41:12,960 - __main__ - INFO - Trial 6: within_2_strikeouts=87.2674, Within 2 K: 87.27%, Over/Under: 73.69%, Params: {'n_estimators': 400, 'learning_rate': 0.2140632231011503, 'num_leaves': 26, 'max_depth': 10, 'min_data_in_leaf': 32, 'feature_fraction': 0.8010255409521116, 'bagging_fraction': 0.9838658541096473, 'bagging_freq': 1, 'min_gain_to_split': 1.3726167294277163, 'lambda_l1': 2.8454071759322304, 'lambda_l2': 1.1029557372355614, 'random_state': 42}
2025-03-28 13:41:14,283 - __main__ - INFO - Trial 7: within_2_strikeouts=87.0415, Within 2 K: 87.04%, Over/Under: 73.65%, Params: {'n_estimators': 92, 'learning_rate': 0.17695556228863715, 'num_leaves': 147, 'max_depth': 12, 'min_data_in_leaf': 82, 'feature_fraction': 0.6615853967937633, 'bagging_fraction': 0.7999664368000945, 'bagging_freq': 8, 'min_gain_to_split': 1.8969698693265191, 'lambda_l1': 0.656712844988972, 'lambda_l2': 2.794548518493898, 'random_state': 42}
2025-03-28 13:41:15,053 - __main__ - INFO - Trial 8: within_2_strikeouts=87.4380, Within 2 K: 87.44%, Over/Under: 73.69%, Params: {'n_estimators': 145, 'learning_rate': 0.2664893306775549, 'num_leaves': 42, 'max_depth': 3, 'min_data_in_leaf': 26, 'feature_fraction': 0.6876502929840207, 'bagging_fraction': 0.6338019488176169, 'bagging_freq': 10, 'min_gain_to_split': 4.259119423414585, 'lambda_l1': 0.7448531952915649, 'lambda_l2': 3.2682964117458537, 'random_state': 42}
2025-03-28 13:41:16,014 - __main__ - INFO - Trial 9: within_2_strikeouts=87.5280, Within 2 K: 87.53%, Over/Under: 73.68%, Params: {'n_estimators': 235, 'learning_rate': 0.28956322057545125, 'num_leaves': 145, 'max_depth': 4, 'min_data_in_leaf': 54, 'feature_fraction': 0.7886957740525928, 'bagging_fraction': 0.7408634616726186, 'bagging_freq': 9, 'min_gain_to_split': 3.7928678553104698, 'lambda_l1': 4.457800099279306, 'lambda_l2': 2.911619800231085, 'random_state': 42}
2025-03-28 13:41:19,857 - __main__ - INFO - Trial 10: within_2_strikeouts=87.5359, Within 2 K: 87.54%, Over/Under: 73.79%, Params: {'n_estimators': 307, 'learning_rate': 0.02340838009373203, 'num_leaves': 108, 'max_depth': 9, 'min_data_in_leaf': 100, 'feature_fraction': 0.8522929888076837, 'bagging_fraction': 0.8785200038983996, 'bagging_freq': 7, 'min_gain_to_split': 0.4797306588295541, 'lambda_l1': 2.0203824556031695, 'lambda_l2': 0.13542863237098635, 'random_state': 42}
2025-03-28 13:41:21,432 - __main__ - INFO - Trial 11: within_2_strikeouts=88.6811, Within 2 K: 88.68%, Over/Under: 73.75%, Params: {'n_estimators': 153, 'learning_rate': 0.011126348120099109, 'num_leaves': 110, 'max_depth': 8, 'min_data_in_leaf': 100, 'feature_fraction': 0.7049442192033797, 'bagging_fraction': 0.5103358002490554, 'bagging_freq': 7, 'min_gain_to_split': 4.707755384165363, 'lambda_l1': 1.64868460624912, 'lambda_l2': 1.7484216103823034, 'random_state': 42}
2025-03-28 13:41:23,487 - __main__ - INFO - Trial 12: within_2_strikeouts=88.6985, Within 2 K: 88.70%, Over/Under: 73.76%, Params: {'n_estimators': 160, 'learning_rate': 0.01158109135810285, 'num_leaves': 115, 'max_depth': 8, 'min_data_in_leaf': 100, 'feature_fraction': 0.5750361963777496, 'bagging_fraction': 0.7078600482475378, 'bagging_freq': 8, 'min_gain_to_split': 1.1226748450344786, 'lambda_l1': 1.6727010234668125, 'lambda_l2': 1.586984272279314, 'random_state': 42}
2025-03-28 13:41:25,327 - __main__ - INFO - Trial 13: within_2_strikeouts=88.6669, Within 2 K: 88.67%, Over/Under: 73.72%, Params: {'n_estimators': 165, 'learning_rate': 0.010412267596302848, 'num_leaves': 121, 'max_depth': 8, 'min_data_in_leaf': 99, 'feature_fraction': 0.5600870378012862, 'bagging_fraction': 0.5431290563050681, 'bagging_freq': 7, 'min_gain_to_split': 2.7295498491479497, 'lambda_l1': 1.5905577808594988, 'lambda_l2': 1.1145747381322344, 'random_state': 42}
2025-03-28 13:41:27,246 - __main__ - INFO - Trial 14: within_2_strikeouts=88.7206, Within 2 K: 88.72%, Over/Under: 73.74%, Params: {'n_estimators': 162, 'learning_rate': 0.01125098260639053, 'num_leaves': 96, 'max_depth': 8, 'min_data_in_leaf': 41, 'feature_fraction': 0.5951838850555807, 'bagging_fraction': 0.6953538561493344, 'bagging_freq': 10, 'min_gain_to_split': 4.879367714760997, 'lambda_l1': 3.4475745729083815, 'lambda_l2': 1.606063216597887, 'random_state': 42}
2025-03-28 13:41:31,079 - __main__ - INFO - Trial 15: within_2_strikeouts=87.5407, Within 2 K: 87.54%, Over/Under: 73.80%, Params: {'n_estimators': 493, 'learning_rate': 0.019157801743230517, 'num_leaves': 89, 'max_depth': 12, 'min_data_in_leaf': 42, 'feature_fraction': 0.6117375247152685, 'bagging_fraction': 0.7004515741605766, 'bagging_freq': 10, 'min_gain_to_split': 4.985247832075409, 'lambda_l1': 3.673266692125929, 'lambda_l2': 0.03837470594344605, 'random_state': 42}
2025-03-28 13:41:33,791 - __main__ - INFO - Trial 16: within_2_strikeouts=87.4001, Within 2 K: 87.40%, Over/Under: 73.72%, Params: {'n_estimators': 287, 'learning_rate': 0.05904230512772645, 'num_leaves': 129, 'max_depth': 7, 'min_data_in_leaf': 13, 'feature_fraction': 0.6073756828386596, 'bagging_fraction': 0.6815357606816185, 'bagging_freq': 9, 'min_gain_to_split': 1.532888114673944, 'lambda_l1': 3.3584599297850186, 'lambda_l2': 1.1808885340529798, 'random_state': 42}
2025-03-28 13:41:36,456 - __main__ - INFO - Trial 17: within_2_strikeouts=87.6054, Within 2 K: 87.61%, Over/Under: 73.80%, Params: {'n_estimators': 224, 'learning_rate': 0.030320412960782535, 'num_leaves': 101, 'max_depth': 10, 'min_data_in_leaf': 51, 'feature_fraction': 0.515259158217566, 'bagging_fraction': 0.8659292212145823, 'bagging_freq': 10, 'min_gain_to_split': 2.4021689059915636, 'lambda_l1': 3.758147268423811, 'lambda_l2': 4.940345228397415, 'random_state': 42}
2025-03-28 13:41:37,529 - __main__ - INFO - Trial 18: within_2_strikeouts=87.4649, Within 2 K: 87.46%, Over/Under: 73.75%, Params: {'n_estimators': 125, 'learning_rate': 0.09817489646116694, 'num_leaves': 72, 'max_depth': 6, 'min_data_in_leaf': 39, 'feature_fraction': 0.6146582405717473, 'bagging_fraction': 0.5732238428333776, 'bagging_freq': 9, 'min_gain_to_split': 0.8114470006681307, 'lambda_l1': 1.3980547922411475, 'lambda_l2': 2.40120938529597, 'random_state': 42}
2025-03-28 13:41:40,413 - __main__ - INFO - Trial 19: within_2_strikeouts=88.2151, Within 2 K: 88.22%, Over/Under: 73.75%, Params: {'n_estimators': 200, 'learning_rate': 0.015189744313095886, 'num_leaves': 132, 'max_depth': 9, 'min_data_in_leaf': 11, 'feature_fraction': 0.5808270560352286, 'bagging_fraction': 0.6999133237305932, 'bagging_freq': 4, 'min_gain_to_split': 3.0695296017257725, 'lambda_l1': 4.305084929452848, 'lambda_l2': 0.6427706819114376, 'random_state': 42}
2025-03-28 13:41:40,439 - __main__ - INFO - Optimization completed in 0.62 minutes
2025-03-28 13:41:40,442 - __main__ - INFO - Best value: 88.7205812667825
2025-03-28 13:41:40,445 - __main__ - INFO - Best params: {'n_estimators': 162, 'learning_rate': 0.01125098260639053, 'num_leaves': 96, 'max_depth': 8, 'min_data_in_leaf': 41, 'feature_fraction': 0.5951838850555807, 'bagging_fraction': 0.6953538561493344, 'bagging_freq': 10, 'min_gain_to_split': 4.879367714760997, 'lambda_l1': 3.4475745729083815, 'lambda_l2': 1.606063216597887}
2025-03-28 13:41:42,558 - __main__ - INFO - Best lightgbm model saved to models\optimization\lightgbm_20250328_134059\optimized_lightgbm_model.pkl
2025-03-28 13:41:42,558 - __main__ - INFO - Optimization for lightgbm completed. Results saved to models\optimization\lightgbm_20250328_134059
